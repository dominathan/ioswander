{
  "_args": [
    [
      {
        "raw": "module-resolver@^1.0.0",
        "scope": null,
        "escapedName": "module-resolver",
        "name": "module-resolver",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/nathanhall/rayka/ioswander"
    ]
  ],
  "_from": "module-resolver@>=1.0.0 <2.0.0",
  "_id": "module-resolver@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/module-resolver",
  "_npmUser": {
    "name": "rektide",
    "email": "rektide@voodoowarez.com"
  },
  "_npmVersion": "1.2.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "module-resolver@^1.0.0",
    "scope": null,
    "escapedName": "module-resolver",
    "name": "module-resolver",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/module-resolver/-/module-resolver-1.0.0.tgz",
  "_shasum": "d412c0b66e08588cd39347a60c3c818bc9119fb5",
  "_shrinkwrap": null,
  "_spec": "module-resolver@^1.0.0",
  "_where": "/Users/nathanhall/rayka/ioswander",
  "author": {
    "name": "rektide",
    "email": "rektide@voodoowarez.com",
    "url": "http://voodoowarez.com"
  },
  "contributors": [
    {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    }
  ],
  "dependencies": {},
  "description": "Asynchronous require.resolve() implementation",
  "devDependencies": {
    "tap": "~0.2.4"
  },
  "directories": {
    "lib": ".",
    "example": "example",
    "test": "test"
  },
  "dist": {
    "shasum": "d412c0b66e08588cd39347a60c3c818bc9119fb5",
    "tarball": "https://registry.npmjs.org/module-resolver/-/module-resolver-1.0.0.tgz"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "keywords": [
    "resolve",
    "require",
    "node",
    "module"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "rektide",
      "email": "rektide@voodoowarez.com"
    }
  ],
  "name": "module-resolver",
  "optionalDependencies": {},
  "readme": "# Node Module Resolver #\n\nAsynchronous implementation of the [node `require.resolve()`\nalgorithm](http://nodejs.org/docs/v0.4.8/api/all.html#all_Together...)\nexcept you can pass in the file to compute paths relatively to along with your\nown `require.paths` without updating the global copy (which doesn't even work in\nnode `>=0.5`).\n\n# methods #\n\nvar resolve = require('node-module-resolver');\n\n## resolve.async(pkg, opts, callback) ##\n\nAsynchronously search for the package/filename string `pkg`\naccording to the [`require.resolve()`\nalgorithm](http://nodejs.org/docs/v0.4.8/api/all.html#all_Together...)\nfor `X=pkg` and `Y=opts.basedir`. Callback is fired with the located module or\nwithout arguments if nothing is found.\n\n### Default values for `opts` ###\n\n````javascript\n{\n    paths : [],\n    basedir : __dirname,\n    extensions : [ '.js' ],\n    readFileSync : fs.readFileSync,\n    isFile : function (file) {\n        return path.existSync(file) && fs.statSync(file).isFile()\n    }\n}\n````\n\nOptionally you can specify a `opts.packageFilter` function to map the contents\nof `JSON.parse()`'d package.json files.\n\nIf nothing is found, all of the directories in `opts.paths` are searched.\n\n## resolve.isCore(pkg) ##\n\nReturn whether a package is in core.\n\n# Thanks #\n\nTo the Node team for documenting what their mad-cap system is, and James Halliday\nfor the synchronous implementation Node-Module-Resolver is forked from.\n",
  "readmeFilename": "README.markdown",
  "repository": {
    "type": "git",
    "url": "git://git.voodoowarez.com/node-module-resolver.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "1.0.0"
}
